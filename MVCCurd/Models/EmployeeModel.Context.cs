//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCCurd.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class emp_detailsEntities : DbContext
    {
        public emp_detailsEntities()
            : base("name=emp_detailsEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<emp_info> emp_info { get; set; }
    
        public virtual ObjectResult<allinfo_Result> allinfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<allinfo_Result>("allinfo");
        }
    
        public virtual int emp_delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("emp_delete", idParameter);
        }
    
        public virtual int emp_insert(Nullable<int> id, string name, string dept, Nullable<decimal> contact, string address)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var contactParameter = contact.HasValue ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(decimal));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("emp_insert", idParameter, nameParameter, deptParameter, contactParameter, addressParameter);
        }
    
        public virtual int emp_update(Nullable<int> id, string name, string dept, Nullable<decimal> contact, string address)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var deptParameter = dept != null ?
                new ObjectParameter("dept", dept) :
                new ObjectParameter("dept", typeof(string));
    
            var contactParameter = contact.HasValue ?
                new ObjectParameter("contact", contact) :
                new ObjectParameter("contact", typeof(decimal));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("emp_update", idParameter, nameParameter, deptParameter, contactParameter, addressParameter);
        }
    }
}
